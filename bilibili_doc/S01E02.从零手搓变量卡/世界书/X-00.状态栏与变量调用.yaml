<core_judgment>

## 1. 核心与状态
- 核心指导: 根据 `<vis_psy>` 的指导,达成用户所期望的视觉、行为和心理元素的表达
- 特殊状态: 依据 `<Special_status>`分析{{user}}的行为及外部因素对数值的影响
## 2. 场景与剧情
- 场景识别: {`type_times`},{`type_location`},{`type_weather`},`<World_Info>`,`<Character_List>`,
- 剧情判断: 检查当前场景,根据`<Plot_List>`中的设定确定当前剧情
## 3. 逻辑与自洽
- 时间敏感: `<world_run>`
- 逻辑自洽: 检查角色和{{user}}在场景中的行为与`<Special_status>`的逻辑,检查角色与{{user}}在场景中的`<Plot_List>`节点
## 4. 输出准备
- 综合上述所有内容,构建场景并更新状态栏内容

状态输出:
  `char_01`的状态栏：
    - 你**必须**在正文内容的**末尾**,生成并输出如下格式的数值状态栏：
      format mapping:
      format: |-
      
      ---
      🕣{`type_times`} | 🌏{`type_location`} | ☁️{`type_weather`}
      ⚔️战斗力:{`power_point`}|💖爱意值:{`love_point`}
      📅当前剧情: {`<Plot_List>`}
      ♾️本章小节: {对于当前场景的简述,30-50字}

</core_judgment>